# Generated by Django 5.2.6 on 2025-09-07 06:31

import django.db.models.deletion
import exten_bot.bot.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('workflow', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('max_completion_tokens', models.PositiveIntegerField(default=4096)),
            ],
        ),
        migrations.CreateModel(
            name='Voice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voice', models.CharField(max_length=255, unique=True)),
                ('voice_sample', models.FileField(blank=True, help_text='Example voice sample', null=True, upload_to='voice_samples/')),
            ],
        ),
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(default=exten_bot.bot.models.generate_uuid, help_text="Bot's username", max_length=32)),
                ('password', models.CharField(default=exten_bot.bot.models.generate_uuid, help_text="Bot's password", max_length=255)),
                ('expiration_date', models.DateTimeField(blank=True, help_text='Expiration date for the bot', null=True)),
                ('type', models.CharField(choices=[('registrant', 'registrant'), ('registrar', 'registrar')], default='registrar', help_text='Type of bot', max_length=50)),
                ('token', models.CharField(help_text='OpenAI token', max_length=500)),
                ('domain', models.CharField(blank=True, default='exten.bot', help_text='SIP Server associated with the bot', max_length=255, null=True)),
                ('instruction', models.TextField(help_text='Instructions for the bot')),
                ('welcome_msg', models.TextField(blank=True, help_text='The message that the bot will say upon connecting.', null=True)),
                ('transfer_uri', models.CharField(blank=True, help_text='URI to transfer the conversation (optional)', max_length=255, null=True)),
                ('temperature', models.DecimalField(decimal_places=2, default=1.0, help_text='Sampling temperature (0.0-1.0)', max_digits=3)),
                ('max_tokens', models.PositiveIntegerField(default=4096, help_text='Maximum number of tokens')),
                ('functions', models.ManyToManyField(blank=True, help_text='Functions available to this bot', related_name='bots', to='workflow.function')),
                ('mcp_servers', models.ManyToManyField(blank=True, help_text='MCP servers available to this bot', related_name='bot_servers', to='workflow.mcp')),
                ('owner', models.ForeignKey(help_text='Owner of the bot', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('model', models.ForeignKey(help_text='Model used by the bot', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bots', to='bot.model')),
                ('voice', models.ForeignKey(help_text='Voice configuration for the bot', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bots', to='bot.voice')),
            ],
        ),
    ]
